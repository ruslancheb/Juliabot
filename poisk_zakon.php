<?php
declare(ticks=1);
//Исследование закономерностей создание идей
$thi=0;
$result=array();
$funct_num=array(
'abs',//abs -- Модуль числа
'acos',//acos -- Арккосинус
'acosh',//acosh -- Инверсный гиперполический косинус
'asin',//asin -- Арксинус
'asinh',//asinh -- Инверсный гиперболический синус
'atan',//atan -- Арктангенс
'atanh',//atanh -- Инверсный гиперболический тангенс
'bindec',//bindec -- Конвертирует двоичные числа в десятичные
'ceil',//ceil -- Округляет дробь в большую сторону
'cos',//cos -- Косинус
'cosh',//cosh -- Гиперболический косинус
'decbin',//ceil -- Округляет дробь в большую сторону
'cos',//cos -- Косинус
'cosh',//cosh -- Гиперболический косинус
'ceil',//ceil -- Округляет дробь в большую сторону
'cos',//cos -- Косинус
'cosh',//cosh -- Гиперболический косинус
'decbin',//decbin -- Конвертирует десятичные числа в двоичные
'dechex',//dechex -- Конвертирует десятичные числа в шестнадцатиричные
'decoct',//decoct -- Конвертирует десятичные числа в восьмеричные
'deg2rad',//deg2rad --  Конвертирует число в градусах к эквиваленту в радианах
'exp',//exp -- Вычисляет экспоненту e (основание натурального логарифма)
'expm1',//expm1 --  Возвращает exp(число)-1, вычисленный точно, даже когда значение числа близко к нулю
'floor',//floor -- Округляет дробь в меньшую сторону
'hexdec',
'log10',//log10 -- Логарифм с основанием 10
'log1p',//log1p --  Возвращает log(1 + число), вычисленный точно, даже когда значение числа близко к нулю
'log',//log -- Вычисляет натуральный логарифм
'octdec',//octdec -- Конвертирует восьмеричное число в десятичное
'rad2deg',//rad2deg
'rad2deg',//rad2deg
'sin',//sin -- Синус
'sinh',//sinh -- Гиперболический синус
'sqrt',// sqrt-- Вычисляет квадратный корень числа
'tan',// sqrt-- Вычисляет квадратный корень числа
'tanh',//tanh-- Вычисляет квадратный корень числа
);

function tick_handler()
{
global $vv9,$GLOBALS2,$result_lleo,$funct_num;
$vv9++;
foreach($GLOBALS as $key=>$value)
{
if($key=='vv9' or $key=='_POST' or $key=='GLOBALS2' or $key=='_GET' or $key=='_COOKIE' or $key=='_FILES' or $key=='_ENV' or $key=='_REQUEST' or $key=='_SERVER' or $key=='GLOBALS')
{
}
else
{
//echo  $key.'=>'.$value.'=>'.$GLOBALS2[$key].'<br>';
if($GLOBALS2[$key]!==$value)
{
if(is_scalar($value))
{
//array_push(,$array);
$valt=$value;
if($valt!=0)
{
$valt=round($valt,3);
$result_lleo[$valt][]=array('n'=>$vv9,'s_func'=>'=','n_val'=>$value,'pere'=>$key);
}
//if(is_bool($value)){
//}
//if(is_string($value))
//{
//}
if(is_numeric($value))
{

foreach($funct_num as $k=>$v)
{
$valt=$v($value);
if($valt!==0 and $valt!==1)
{
$valt=(string)round($valt,3);
$result_lleo[$valt][]=array('n'=>$vv9,'s_func'=>$v,'n_val'=>$value,'pere'=>$key);
foreach($result_lleo[$valt] as $kg=>$vg)
{
if($vv9!==$vg['n'])
{
}
}
}
}
}
$GLOBALS2[$key]=$value;
}
else
{
if(is_null($value))
{
//echo 'Это ноль';
}
elseif(is_object($value))
{
//echo 'Это объект';
}
elseif(is_resource($value))
{
//echo 'Это ресурс';
}
}
}
}
}
}
if($settings['poisk_zakonom']===true)
{
register_tick_function('tick_handler');
}
//addcslashes 	Экранирует спецсимволы в стиле языка C
//addslashes 	Экранирует спецсимволы в строке
//bin2hex 	Преобразует бинарные данные в шестнадцатиричное представление
//chr 	Возвращает символ по его коду
//count_chars 	Возвращает информацию о символах, входящих в строку
//htmlentities 	Преобразует символы в соответствующие HTML сущности.
//htmlspecialchars 	Преобразует специальные символы в HTML сущности
//html_entity_decode 	Преобразует HTML сущности в соответствующие символы
//implode 	Объединяет элементы массива в строку
//localeconv 	Возвращает информацию о числовых форматах
//ltrim 	Удаляет пробелы из начала строки
//nl2br 	Вставляет HTML код разрыва строки перед каждым переводом строки
//number_format 	Форматирует число с разделением групп
//ord 	Возвращает ASCII код символа
//parse_str 	Разбирает строку в переменные

//quoted_printable_decode 	Раскодирует строку, закодированную методом quoted printable
//quotemeta 	Экранирует специальные символы
//rtrim 	Удаляет пробелы из конца строки
//sha1 	Возвращает SHA1 хэш строки
//sha1_file 	Возвращает SHA1 хэш файла
//soundex 	Возвращает ключ soundex для строки
//sscanf 	Разбирает строку в соответствии с заданным форматом
//strcasecmp 	Сравнение строк без учета регистра, безопасное для данных в двоичной форме
//strcmp 	Сравнение строк, безопасное для данных в двоичной форме
//strcoll 	Сравнение строк с учетом текущей локали
//strcspn 	Возвращает длину участка в начале строки, не соответствующего маске
/*
stripcslashes 	
Удаляет экранирование символов, произведенное функцией addcslashes()
stripos 	
Возвращает позицию первого вхождения подстроки без учета регистра
stripslashes 	
Удаляет экранирование символов, произведенное функцией addslashes()
strip_tags 	
Удаляет HTML и PHP тэги из строки
stristr 	
Аналог функции strstr, но независит от регистра.
strlen 	
Возвращает длину строки
strnatcasecmp 	
Сравнение строк без учета регистра с использованием алгоритма "естественного упорядочения"
strnatcmp 	
Сравнение строк с использованием алгоритма "естественного упорядочения"
strncasecmp 	
Сравнение первых n символов строк без учета регистра, безопасное для данных в двоичной форме
strncmp 	
Сравнение первых n символов строк без учета регистра, безопасное для данных в двоичной форме
strpos 	
Находит первое вхождение подстроки в строку
strrchr 	
Находит последнее вхождение символа в строку
strrev 	
Переворачивает строку
strripos 	
Возвращает позицию последнего вхождения подстроки без учета регистра
strrpos 	
Находит последнее вхождение символа в строку
strspn 	
Возвращает длину участка в начале строки, соответствующего маске
strstr 	
Находит первое вхождение подстроки
strtok 	
Разбивает строку
strtolower 	
Преобразует строку в нижний регистр
strtoupper 	
Преобразует строку в верхний регистр
strtr 	
Преобразует заданные символы
str_ireplace 	
Регистро-независимый вариант функции str_replace().
str_pad 	
Дополняет строку другой строкой до заданной длины
str_repeat 	
Возвращает повторяющуюся строку
str_replace 	
Заменяет строку поиска на строку замены
str_rot13 	
Выполняет над строкой преобразование ROT13
str_shuffle 	
Переставляет символы в строке
str_split 	
Преобразует строку в массив
str_word_count 	
Возвращает информацию о словах, входящих в строку
substr 	
Функция возвращает часть строки
substr_count 	
Подсчитывает число вхождений подстроки в строку
substr_replace 	
Заменяет часть строки
trim 	
Удаляет пробелы из начала и конца строки
ucfirst 	
Преобразует первый символ строки в верхний регистр
ucwords 	
Преобразует в верхний регистр первый символ каждого слова в строке
vprintf 	
Выводит отформатированную строку
vsprintf 	
s//Возвращает отформатированную строку
//wordwrap 	Выполняет перенос строки на данное количество символов с использованием символа разрыва строки.
*/
?>
 